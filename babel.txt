Babel是一个广泛使用的转码器，可以将ES6代码转为ES5代码.

1,安装babel-cli
全局安装：
	npm install babel-cli -g
2,babel配置文件 .babelrc
	格式：
	{
	  "presets": [],
	  "plugins": []
	}
presets字段设定转码规则，常用规则集：
	# ES2015转码规则
	$ npm install --save-dev babel-preset-es2015

	# react转码规则
	$ npm install --save-dev babel-preset-react

	# ES7不同阶段语法提案的转码规则（共有4个阶段），选装一个
	$ npm install --save-dev babel-preset-stage-0
	$ npm install --save-dev babel-preset-stage-1
	$ npm install --save-dev babel-preset-stage-2
	$ npm install --save-dev babel-preset-stage-3
3,命令用法：
	# 转码结果输出到标准输出
	$ babel example.js

	# 转码结果写入一个文件
	# --out-file 或 -o 参数指定输出文件
	$ babel example.js --out-file compiled.js
	# 或者
	$ babel example.js -o compiled.js

	# 整个目录转码
	# --out-dir 或 -d 参数指定输出目录
	$ babel src --out-dir lib
	# 或者
	$ babel src -d lib

	# -s 参数生成source map文件
	$ babel src -d lib -s

上面是全局环境下安装babel命令使用方法，为了不同的项目使用不同的babel版本，建议局部安装babel。

	npm install babel-cli --save-dev
	对应package.json
	{
		"devDependencies":{
			"balel-cli":'^6.1.0'
		},
		"scripts":{
		"build":"babel src -d lib"
		}
	}
	转码命令：npm run build